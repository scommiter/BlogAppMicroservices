// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Post.Infrastructure.Persistence;

#nullable disable

namespace Post.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240113073739_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Post.Domain.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Post.Domain.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Post.Domain.Entities.TreePath", b =>
                {
                    b.Property<int>("Ancestor")
                        .HasColumnType("int")
                        .HasColumnName("ancestor");

                    b.Property<int>("Descendant")
                        .HasColumnType("int")
                        .HasColumnName("descendant");

                    b.HasKey("Ancestor", "Descendant");

                    b.HasIndex("Descendant");

                    b.ToTable("TreePaths");
                });

            modelBuilder.Entity("Post.Domain.Entities.Comment", b =>
                {
                    b.HasOne("Post.Domain.Entities.Post", "CommentPost")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommentPost");
                });

            modelBuilder.Entity("Post.Domain.Entities.TreePath", b =>
                {
                    b.HasOne("Post.Domain.Entities.Comment", "AncestorComment")
                        .WithMany("Ancestors")
                        .HasForeignKey("Ancestor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Post.Domain.Entities.Comment", "DescendantComment")
                        .WithMany("Descendants")
                        .HasForeignKey("Descendant")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AncestorComment");

                    b.Navigation("DescendantComment");
                });

            modelBuilder.Entity("Post.Domain.Entities.Comment", b =>
                {
                    b.Navigation("Ancestors");

                    b.Navigation("Descendants");
                });
#pragma warning restore 612, 618
        }
    }
}
